query GetTickets(
  $type: String
  $sn: String
  $address: String
  $remark: String
  $pstime: String
  $petime: String
  $time: Int
  $orders: [String!]!
  $page: Int!
  $limit: Int!
  $count: Boolean!
  $status: String
  $own: Boolean
) {
  tickets(
    input: {
      time: $time
      sn: $sn
      type: $type
      address: $address
      remark: $remark
      pstime: $pstime
      petime: $petime
      status: $status
      orders: $orders
      page: $page
      limit: $limit
      count: $count
      own: $own
    }
  ) {
    size
    total
    data {
      id
      status
      created
      changed
      type
      state
      sn
      address
      position
      desc
      remark
      assignee
      otype
      oid
      term
      live
      creator {
        id
        name
      }

      worker {
        id
        name
      }

      tstate {
        id
        name
        roles {
          id
          name
        }
      }

      actions {
        id
        name
        fields {
          id
          action
          name
          desc
          ftype
          format
          default
          required
          ofield
        }
      }
    }
  }
}

query TicketTypes {
  ticket_types {
    id
    name
    term
  }
}

query TicketTypeById($id: String!) {
  ticketType: ticket_types(id: $id) {
    id
    name
    states {
      id
      status
      type
      name
      uid
      mode
      weight
      created
      changed
      user {
        name
      }

      roles {
        id
        name
      }
    }
  }
}

query GetTicket($id: String!) {
  ticket(id: $id) {
    id
    tracks {
      id
      status
      created
      changed
      uid
      level
      action
      state
      ticket
      parent
      remark
      operator {
        name
      }
      ticket_action {
        id
        name
        fields {
          id
          ftype
          name
        }
      }

      track_fields {
        id
        value
        field
        track
        track_field {
          name
          ftype
        }
      }
    }
  }
}

query TicketStat($own: Boolean) {
  ticket_stat(own: $own) {
    status {
      working
      pending
      closed
      auditing
    }
    types {
      type
      name
      total
    }
  }
}

mutation TicketStateUpdate(
  $id: String
  $status: Int
  $type: String
  $name: String
  $mode: Int
  $uid: String
  $weight: Int
  $roles: [String!]
) {
  ticket_state_update(
    input: {
      id: $id
      status: $status
      type: $type
      name: $name
      mode: $mode
      uid: $uid
      weight: $weight
      roles: $roles
    }
  ) {
    id
  }
}

mutation TicketStateCreate(
  $type: String
  $name: String!
  $mode: Int!
  $uid: String
  $weight: Int!
  $roles: [String!]
) {
  ticket_state_create(
    input: {
      type: $type
      name: $name
      mode: $mode
      uid: $uid
      weight: $weight
      roles: $roles
    }
  ) {
    id
  }
}

mutation TicketCreate(
  $otype: String!
  $oid: String!
  $type: String!
  $desc: String
  $remark: String
  $term: Int
  $address: String
  $position: String
  $live: Int
  $assignee: String
) {
  ticket_create(
    input: {
      otype: $otype
      oid: $oid
      type: $type
      desc: $desc
      remark: $remark
      term: $term
      address: $address
      position: $position
      live: $live
      assignee: $assignee
    }
  ) {
    id
  }
}

mutation TicketAction(
  $ticket: String!
  $action: String!
  $assignee: String
  $remark: String
  $fields: [ITicketActionField!]
) {
  ticket_action(
    input: {
      ticket: $ticket
      action: $action
      assignee: $assignee
      remark: $remark
      fields: $fields
    }
  ) {
    track
  }
}

subscription TicketAssign($token: String!) {
  ticket_action(token: $token) {
    id
    sn
    type
    address
  }
}
